[{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://caravagnalab.github.io/biPOD/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://caravagnalab.github.io/biPOD/articles/a1_introduction.html","id":"input-format","dir":"Articles","previous_headings":"","what":"Input format","title":"1. Introduction","text":"input biPOD tibble two columns: time denotes instant time observation collected count contains values observations proxy population size (e.g. number cells, volume, …) biPOD comes template dataset.","code":"# Load template data data(\"xenografts\", package = \"biPOD\")"},{"path":"https://caravagnalab.github.io/biPOD/articles/a1_introduction.html","id":"initialisation-of-a-new-dataset","dir":"Articles","previous_headings":"","what":"Initialisation of a new dataset","title":"1. Introduction","text":"use biPOD need initialize bipod object initialisation function init. create new object required explicit sample name. Additionally, since biPOD might deal longitudinal observations coming different time windows (e.g Natural evolution, Treatment, Relapse,…) divided set breakpoints, user also input known. (see )","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a1_introduction.html","id":"example-bipod-object","dir":"Articles","previous_headings":"","what":"Example biPOD object","title":"1. Introduction","text":"Let’s use one sample coming xenograft data along made set breakpoints. look modified counts see observations grouped","code":"mouse_id <- 529 biPOD::init(   counts = xenografts %>% dplyr::filter(mouse == mouse_id) %>% dplyr::mutate(count = tumour_volume),   sample = mouse_id,   break_points = c(0, 20) ) #>  #> ── biPOD - bayesian inference for Population Dynamics ────────────────────────── #> ℹ Using sample named: 529. #> ! No group column present in input dataframe! A column will be added. #> ── [ biPOD ] 6 observations divided in 3 time windows. ─────────────────────────"},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"2. Task 1","text":"take xenografts data make ready inference preparing count column dividing time column factor 7 (order work unit time week).","code":"data(\"xenografts\", package = \"biPOD\") xenografts <- xenografts %>%   dplyr::rename(count = tumour_volume) %>%   dplyr::mutate(time = time / 7)"},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"fit---variational-and-no-breakpoints","dir":"Articles","previous_headings":"","what":"Fit - Variational and no breakpoints","title":"2. Task 1","text":"Let’s take sample undergo treatment therefore exhibit natural growth single parameter. Hence, going consider breakpoints sample. bipod object initialized possible visualize data using plot_input function.  Now, fit data first task one use fit function. want fit one specific type growth (exponential logistic) pass one two parameter growth_type. Otherwise, want test choose best one set growth_type parameter . Sometimes might helpful scale input data factor_size, counts divided . population decreasing growing extremely slowly (\\(\\rho \\sim 0\\)) instant time population born might impossible infer. deal situations, \\(t_0\\) interest, just set infer_t0 parameter FALSE. order use Variational Inference algorithm suffice set variational parameter TRUE.","code":"mouse_id <- 537 d <- xenografts %>% dplyr::filter(mouse == mouse_id) x <- biPOD::init(   counts = d,   sample = mouse_id,   break_points = NULL ) #>  #> ── biPOD - bayesian inference for Population Dynamics ────────────────────────── #> ℹ Using sample named: 537. #> ! No group column present in input dataframe! A column will be added. biPOD::plot_input(x, log_scale = F, add_highlights = T) x <- biPOD::fit(   x,   growth_type = \"both\",   model_selection_algo = \"mixture_model\",   factor_size = 1,   variational = T ) #> ℹ Fitting with model selection. #> ! The first step of the inference will be performed using MCMC..."},{"path":[]},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"diagnostics","dir":"Articles","previous_headings":"Plot - Variational and no breakpoints","what":"Diagnostics","title":"2. Task 1","text":"first plot look one regarding diagnostic inference. case, used VI, going look ELBO. , let’s use plot_elbo function requires bipod object specification elbo data want use since might multiple perform different task object.","code":"biPOD::plot_elbo(x, elbo_data = x$fit_elbo, diagnose = T)"},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"plot-of-fit","dir":"Articles","previous_headings":"Plot - Variational and no breakpoints","what":"Plot of fit","title":"2. Task 1","text":"Use function plot_fit plot fit resulting inference first task. Set zoom TRUE better view observations full_process TRUE also plot inferred value \\(t_0\\).","code":"biPOD::plot_fit(x = x, zoom = T, full_process = T)"},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"plot-posteriors","dir":"Articles","previous_headings":"Plot - Variational and no breakpoints","what":"Plot posteriors","title":"2. Task 1","text":"can use general function plot_posterior plot posterior given parameters (use plot_posteriors set parameters). names available parameters can found one fit objects inside bipod object. example case let’s plot \\(t_0\\).","code":"print(x$fit$parameters) #> [1] \"lp__\"        \"lp_approx__\" \"rho[1]\"      \"t0\"          \"K\" biPOD::plot_posterior(   x,   x_fit = x$fit,   par_name = \"t0\",   color = \"maroon\" )"},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"model-selection","dir":"Articles","previous_headings":"Plot - Variational and no breakpoints","what":"Model selection","title":"2. Task 1","text":"Since selected exponential logistic also possibility visualize decision. case, used mixture_model algorithm can plot using ``","code":"biPOD::plot_mixture_model_omega(x, plot_type = \"boxplot\", color = \"forestgreen\")"},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"fit---mcmc-and-with-breakpoints","dir":"Articles","previous_headings":"","what":"Fit - MCMC and with breakpoints","title":"2. Task 1","text":"Let’s now consider sample undergoes treatment therefore exhibit multiple growth rates. tutorial work two manually chosen breakpoints (.e 0 7). Now input grouped different time windows, can also seen plotting .  Let’s use fit function. want use MCMC algorithm make sure set variational parameter FALSE. Moreover, going use bayes_factor model selection algorithm.","code":"mouse_id <- 543 d <- xenografts %>% dplyr::filter(mouse == mouse_id) x <- biPOD::init(   counts = d,   sample = mouse_id,   break_points = c(0, 7) ) #>  #> ── biPOD - bayesian inference for Population Dynamics ────────────────────────── #> ℹ Using sample named: 543. #> ! No group column present in input dataframe! A column will be added. biPOD::plot_input(x, log_scale = T, add_highlights = T) x <- biPOD::fit(   x,   growth_type = \"both\",   model_selection_algo = \"bayes_factor\",   variational = FALSE )"},{"path":[]},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"diagnostics-1","dir":"Articles","previous_headings":"Plot - MCMC and with breakpoints","what":"Diagnostics","title":"2. Task 1","text":"Let’s plot diagnostic inference. case, used MCMC, going look chains see ’ve mixed properly. , let’s use plot_traces function requires bipod object specification fit want use since might multiple perform different task object.","code":"biPOD::plot_traces(x, fit = x$fit, pars = NULL, diagnose = T) #> ℹ The input vector 'pars' is empty. All the following parameters will be #> reported: \"lp__\", \"rho[1]\", \"rho[2]\", \"rho[3]\", \"t0\", and \"K\".  It might take #> some time..."},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"plot-of-fit-1","dir":"Articles","previous_headings":"Plot - MCMC and with breakpoints","what":"Plot of fit","title":"2. Task 1","text":"Let’s use function plot_fit. can change legend using parameter legend_labels legend_title.","code":"biPOD::plot_fit(x = x, legend_labels = c(\"Natural growth\", \"Treatment\", \"Relapse\"), legend_title = \"Phase\")"},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"plot-of-posteriors","dir":"Articles","previous_headings":"Plot - MCMC and with breakpoints","what":"Plot of posteriors","title":"2. Task 1","text":"Let’s use plot_posteriors function plot growth rates one .","code":"biPOD::plot_posteriors(   x,   x_fit = x$fit,   par_list = c(\"rho[1]\", \"rho[2]\", \"rho[3]\") )"},{"path":"https://caravagnalab.github.io/biPOD/articles/a2_task1.html","id":"model-selection-1","dir":"Articles","previous_headings":"Plot - MCMC and with breakpoints","what":"Model selection","title":"2. Task 1","text":"finally, let’s plot Bayes factor using plot_bayes_factor function.","code":"biPOD::plot_bayes_factor(x, with_categories = F)"},{"path":"https://caravagnalab.github.io/biPOD/articles/a3_task2.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"3. Task 0","text":"take xenografts data make ready inference preparing count column dividing time column factor 7 (order work unit time week). select sample 543, already presented previous vignette.","code":"data(\"xenografts\", package = \"biPOD\") mouse_id <- 543 d <- xenografts %>%   dplyr::rename(count = tumour_volume) %>%   dplyr::mutate(time = time / 7) %>%   dplyr::filter(mouse == mouse_id)"},{"path":"https://caravagnalab.github.io/biPOD/articles/a3_task2.html","id":"breakpoints-inference","dir":"Articles","previous_headings":"","what":"Breakpoints inference","title":"3. Task 0","text":"can infer breakpoints following way. initialized bipod object breakpoints can use function breakpoints_inference. reasonably know possible number breakpoints, pass vector available_changepoints  inferred breakpoints now stored metadata$breakpoints field.","code":"x <- biPOD::init(d, sample = mouse_id, break_points = NULL) #>  #> ── biPOD - bayesian inference for Population Dynamics ────────────────────────── #> ℹ Using sample named: 543. #> ! No group column present in input dataframe! A column will be added. biPOD::plot_input(x) x <- biPOD::fit_breakpoints(x, min_points = 3, available_breakpoints = c(0,2), n_trials = 10000, norm = F) #> Initial proposals #> Proposals' optimization #> ✔ Breakpoints have been inferred. Inspect the results using the plot_breakpoints_posterior function. #> ℹ Median of the inferred breakpoints have been succesfully stored. #x <- biPOD::breakpoints_inference(x, available_changepoints = c(0,2), max_iter = 50) print(x$metadata$breakpoints) #> [1] 0.2822715 6.8196350"},{"path":"https://caravagnalab.github.io/biPOD/articles/a3_task2.html","id":"breakpoints-posteriors","dir":"Articles","previous_headings":"","what":"Breakpoints posteriors","title":"3. Task 0","text":"posteriors inferred breakpoints can seen using plot_breakpoints_posterior function.","code":"biPOD::plot_breakpoints_posterior(x)"},{"path":"https://caravagnalab.github.io/biPOD/articles/a3_task2.html","id":"re-fit-task-1","dir":"Articles","previous_headings":"","what":"Re-fit task 1","title":"3. Task 0","text":"Now breakpoints inferred one can fit data according first task simply using fit function. Let’s see works one example. let’s look final result.","code":"x <- biPOD::fit(   x,   growth_type = \"both\" ) #> ℹ Fitting with model selection. #> ℹ Model selection finished! #> ℹ Model with \"Logistic\" growth deemed better with \"Decisive\" evidence. (BF = 964856016079554) biPOD::plot_fit(x) biPOD::plot_posteriors(   x,   x_fit = x$fit,   par_list = c(\"rho[1]\", \"rho[2]\", \"rho[3]\") )"},{"path":[]},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"multi-step-logistic-and-exponential-growth-models","dir":"Articles","previous_headings":"Methods","what":"Multi-step logistic and exponential growth models","title":"5. biPOD Supplementary Materials and Methods","text":"general growth process can seen continuous-time Markov process [8,11], \\(y(x) \\\\mathbb{N}_0\\) represents number individuals population cancerous cell time \\(t\\), \\(t_0\\) indicates instant time first cancerous cell born, .e. \\(y(x=t_0)=1\\). transition rates problem defined : \\[\\begin{align*}     \\alpha_n(x) = \\lim_{h \\rightarrow 0^+} \\frac{1}{h} P[y(x+h) = n+1 \\mid y(x)=n]\\\\     \\beta_n(x) = \\lim_{h \\rightarrow 0^+} \\frac{1}{h} P[y(x+h) = n-1 \\mid y(x)=n] \\end{align*}\\] \\(\\alpha_n(t)\\) \\(\\beta_n(t)\\) positive functions indicates birth death rates population \\(y(x)=n\\). Similarly, one can denote \\(\\alpha(t)\\) \\(\\beta(t)\\) individual birth death rate time \\(t\\). Assuming \\(y(0)=n_0\\) \\(n_0 \\\\mathbb{N}\\) given \\(m \\\\mathbb{N}_0\\), one interested computing \\[\\begin{align*}     P_{n_0,m}(x) = P[y(x)=m \\mid y(0)=n_0], \\quad t \\geq 0 \\end{align*}\\] represents probability population reaches population size equal \\(m\\) time \\(x\\) conditioned population size \\(x=0\\). Quite trivially, \\(P_0m=0 \\hspace{1mm} \\forall m>0\\), meaning 0 absorbing state Markov process. probability generating function process \\[\\begin{align*}     G(z,x) = \\sum_{m=0}^{\\infty} P_{n_0m}(x)z^m \\end{align*}\\] , shown [12], can rewritten \\[\\begin{align*}     G(z,x) = [1-(z-1)[(z-1)\\phi(x)-\\psi(x)]^{-1}]^{n_0} \\end{align*}\\] quantities \\(\\phi(x)\\) \\(\\psi(x)\\) depends functional form individuals birth death rates: \\[\\begin{align*}     \\psi(x) = \\exp \\left\\{ -\\int_0^x (\\alpha(\\tau) - \\beta(\\tau)) d\\tau \\right\\} \\\\     \\phi(x) = \\int_0^x \\alpha(\\tau) \\psi(\\tau) d\\tau \\end{align*}\\] Hence, possible easily compute expectation variance \\(y(x)\\): \\[\\begin{align*}     \\mathbb{E}_{n_0}(x) = \\mathbb{E}[y(x) \\mid n_0] = \\frac{n_0}{\\psi(x)} \\\\     \\text{Var}_{n_0}(x) = n_0 \\frac{\\psi(x) + 2\\phi(x)-1}{\\psi^2(x)} \\end{align*}\\]","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"exponential-growth","dir":"Articles","previous_headings":"Methods","what":"Exponential growth","title":"5. biPOD Supplementary Materials and Methods","text":"first growth pattern consider can expressed simple yet ubiquitous differential equation: \\[\\begin{align*}     \\frac{dy(x)}{dx} = \\rho y(x) \\end{align*}\\] \\(\\rho \\geq 0\\) represents growth rate. solution aforementioned equation yields \\[\\begin{align*}     y(x) = n_0e^{\\rho x} \\end{align*}\\] indicating population starting \\(n_0\\) evolve exponentially time upper bounds. growth pattern, transition rates can written \\[\\begin{align*}     \\alpha_n=y\\alpha(x) \\quad \\beta_n=y\\beta(x) \\end{align*}\\] ’s natural observe birth death rates linear respect \\(n\\), meaning probability birth (death) happening infinitesimal time-interval proportional previous size population. Let \\(\\rho(x) = \\alpha(x) - \\beta(x)\\) individual net growth rate time \\(x\\) assume \\(\\rho(x)\\) piece-wise constant function, representing different net growth rates multi-step growth process. Without loss generality, consider process single known time-point \\(t_1\\) net growth rate changes \\(\\rho_0\\) \\(\\rho_1\\); case form \\(\\psi(x)\\) \\[\\begin{align*}     \\phi(x) = \\exp \\left\\{ -\\rho_0 x\\right\\}, \\quad x \\leq t_1 \\\\     \\phi(x) = \\exp \\left\\{ -\\rho_0 t_1\\right\\} \\exp \\left\\{ -\\rho_1 (x-t_1)\\right\\}, \\quad x > t_1 \\end{align*}\\] ’s trivial see can generalised number time-points, .e. number different growth rates, expected mean conditioned \\(n_0\\) can computed \\[\\begin{align*}     \\mathbb{E}_{n_0}(x) = n_0 \\exp \\left\\{ \\rho_0 x\\right\\}, \\quad x \\leq t_1 \\\\     \\mathbb{E}_{n_0}(x) = n_0 \\exp \\left\\{ \\rho_0 t_1\\right\\} \\exp \\left\\{ \\rho_1 (x-t_1)\\right\\}, \\quad x \\leq t_1 \\end{align*}\\]","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"logistic-growth","dir":"Articles","previous_headings":"Methods","what":"Logistic growth","title":"5. biPOD Supplementary Materials and Methods","text":"logistic model generalisation exponential one takes account possibility maximum population size constrained. case define carrying capacity \\(L\\) upper bound, can caused many environmental factors availability resources space. generalised differential equation becomes \\[\\begin{align*}     \\frac{dy(x)}{dx} = \\rho \\left[ 1 - \\frac{y(x)}{L} y(x) \\right] \\end{align*}\\] second term modulates effective growth rate affecting population: bigger population size leads slower growth. letting \\(L \\rightarrow \\infty\\), logistic equation tends exponential one. equation can easily solved separation variables yields solution \\[\\begin{align*}     y(x) = \\frac{n_0L}{n_0 + (L - n_0) \\exp\\{-\\rho x\\}} \\end{align*}\\] One can also merge two terms differential equation substitute time-dependent growth rate: \\[\\begin{align*}     \\frac{dy(x)}{dx} = \\nu(x) y(x) \\end{align*}\\] case, solution \\(\\nu (t)\\) straightforward: \\[\\begin{align*}     \\nu(x) = \\frac{\\rho (L - n_0)}{(L-n_0) + n_0 \\exp \\{ \\rho x \\}} \\end{align*}\\] Now, similarly done exponential case indicated net growth rate per capita defined piece-wise constant function, \\(\\nu (x)\\) represents net growth rate per capita depends initial conditions, carrying capacity \\(L\\) functional form \\(\\rho\\). , assume \\(\\rho\\) piece-wise constant denote ti changing points. Hence, modelling growth patterns net growth rate changes time depending population size, also value piece-wise constant function \\(\\rho(t)\\). Now, without loss generality let’s consider single changing point \\(t_1\\) one can first compute \\(\\psi(x)\\) expected mean conditioned starting conditions (.e. value \\(n_0\\)) \\[\\begin{align*}     \\mathbb{E}_{n_0}(x) = \\frac{n_0L}{n_0 + (L - n_0) \\exp\\{-\\rho_0 x\\}}, \\quad x \\leq t_1 \\\\     \\mathbb{E}_{n_0}(x) = \\frac{n_1L}{n_1 + (L - n_1) \\exp\\{-\\rho_1 (x-t_1)\\}}, \\quad x > t_1 \\end{align*}\\] define \\(n_1\\) \\(\\mathbb{E}_{n_0}(x=t_1)\\).","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"start-of-the-process","dir":"Articles","previous_headings":"Methods","what":"Start of the process","title":"5. biPOD Supplementary Materials and Methods","text":"discussed far situation \\(y(0)=n_0\\) since common situation first observation growth process happens much later actual start process. Nonetheless, one also interested obtaining estimate, least upper bound, \\(t_0 = \\min\\{x \\mid y(x)=1\\}\\). can done simply shifting \\(t_0\\) values instant times (.e. change variables \\(x'=x-t_0\\)). modification model now \\(y(x'=0)=1\\).","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"population-dynamics-change-points-detection","dir":"Articles","previous_headings":"Methods","what":"Population dynamics change-points detection","title":"5. biPOD Supplementary Materials and Methods","text":"general, change-points \\(t_i\\) defining intervals time piece-wise functions consider might known , therefore, method infer needed. main assumption make underlying growth rates change sign breakpoints. words, given change point, population change status “growing” “shrinking” viceversa. follows change-points found locations true function \\(y(x)\\) describing process present either minimum maximum, , equivalently, first derivative \\(y'(x)\\) zero. Given intrinsic noise present observations, point might look like maximum/minimum function without actually one. , make use spline approximation smooth noise propose set candidates change-points \\(\\hat{t_i}\\) used priors inference breakpoints. cubic spline estimate \\(\\hat{y}\\) function minimize [13] \\[\\begin{align*}     \\frac{1}{n}\\sum_{j=1}^n \\left[ \\hat{y}(x_n) - y_n)\\right]^2 + \\lambda \\int \\hat{y}''(x)^2 dx \\end{align*}\\] \\(\\lambda\\) smoothing parameter controls trade-“fitness” (first term) “roughness” (second term) approximation. ’s easy notice \\(\\lambda = 0\\) produces interpolating splines whereas \\(\\lambda \\rightarrow \\infty\\) produces linear least squares estimate. approximation \\(\\hat{y}\\) obtained, one can easily compute points first derivative changes sign. denote points \\(\\hat{t_i}\\). Obviously, choice \\(\\lambda\\) affects multiplicity minima/maxima found. Therefore, \\(\\lambda\\) can either user-defined can tuned order obtain user-defined number change-points. set \\(\\hat{t_i}\\) found, define prior . \\(\\) choose truncated normal distribution following characteristics: Moreover, prior distributions constrained fact inferred change-points increasing order therefore enforce intervals overlap. Hence, considering \\(\\Delta t_i=t_i-t_{-1}\\), \\(\\sigma_t\\) might change according \\[\\begin{align*}     \\sigma_t = \\min \\{ \\sigma_t, \\min \\{ \\frac{1}{2}\\Delta t_i \\} \\} \\end{align*}\\] , inference carried order obtain posterior distributions change points medians posteriors can used “true” change points first task.","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"nested-growth-models-for-competing-populations","dir":"Articles","previous_headings":"Methods","what":"Nested growth models for competing populations","title":"5. biPOD Supplementary Materials and Methods","text":"typical scenario one tumor treated, mass shrinks later regrows. case, observed dynamics U-shaped. cases, assume presence two populations \\(s\\) \\(r\\); first sensitive treatment, whereas second one resistant . means positive negative growth rates exhibited two populations, respectively. sensitive population assumed present start treatment initial condition \\(y_s(x=0)=n_s\\) governed differential equation \\[\\begin{align*}     \\frac{dy_s(x)}{dx} = -\\rho_s (x) \\end{align*}\\] second population assumed first resistant cell born \\(x=t_r\\). Therefore, differential equation governing dynamics resistant population \\[\\begin{align*}   \\frac{dy_r(x)}{dx} = u(x - t_r) \\rho_r y_r \\end{align*}\\] Heaviside function \\(u(x-t_r)\\) defined \\[\\begin{equation}   u(x-t_r) =    \\left\\{\\begin{array}{lr}        0, &  x \\le t_r \\\\        1, &  x > t_r     \\end{array}\\right. \\end{equation}\\] Trivially, observed counts \\(y(x)\\) sum two populations can obtained analytically integrating two equations summing . \\(x \\ge 0\\) gives: \\[\\begin{align*}     y(x) = n_s \\exp\\{-\\rho_s x\\} + u(x - t_r) \\exp\\{\\rho_r (x - t_r)\\} \\end{align*}\\]","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"likelihood-compuation","dir":"Articles","previous_headings":"Methods","what":"Likelihood compuation","title":"5. biPOD Supplementary Materials and Methods","text":"presented models given set observations \\(X =\\{(x_n, y_n\\)}\\) consider drawn poisson process parameter equal expected value population \\(\\mathbb{E}_y(x)\\) analytical form expected value depend considered task. means given task parameters \\(\\theta\\), likelihood computed : \\[\\begin{align*} \\mathbb{L}(X \\mid \\theta) = \\prod_{n=1}^{|X|} \\text{Poisson}(y_n \\mid \\mathbb{E}[ y(x_n) \\mid \\theta]) \\end{align*}\\]","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"models-pgms","dir":"Articles","previous_headings":"","what":"Models’ PGMs","title":"5. biPOD Supplementary Materials and Methods","text":"probabilistic graphical models tree different task presented prior distributions employed described detail.","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"task-1","dir":"Articles","previous_headings":"Models’ PGMs","what":"Task 1","title":"5. biPOD Supplementary Materials and Methods","text":"Given trajectory \\(X =\\{(x_n, y_n\\)}\\) population divided \\(J\\) time windows, parameters interest \\(J\\) growth rates \\(\\rho_j\\), instant time \\(t_0\\) population born , population undergoing logistic growth, carrying capacity \\(L\\). priors values : choose standard normal growth rates, broad normal \\(t_0\\) constraint \\(t_0\\) must smaller equal time first observation, broad normal carrying capacity constraint \\(L\\) must greater equal largest observation.","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"task-2","dir":"Articles","previous_headings":"Models’ PGMs","what":"Task 2","title":"5. biPOD Supplementary Materials and Methods","text":"Given trajectory \\(X =\\{(x_n, y_n\\)}\\) population, parameters interest \\(J-1\\) change points, \\(J-1\\) either given user results choice \\(\\lambda\\) parameter spline approximation. priors values : Essentially, \\(\\hat{t_j}\\) proposed spline approximation choose flat normal distribution constrained interval \\([\\hat{t_j}-\\sigma_t, \\hat{t_j} + \\sigma_t]\\).","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/a5_supplementary_materials.html","id":"task-3","dir":"Articles","previous_headings":"Models’ PGMs","what":"Task 3","title":"5. biPOD Supplementary Materials and Methods","text":"Given trajectory \\(X =\\{(x_n, y_n\\)}\\) resistant sensitive population assumed co-exist, parameters interest two growth rates \\(\\rho_s\\) \\(\\rho_r\\), size sensitive population \\(n_s\\) instant time first observation instant time resistant population born \\(t_r\\). priors values : Essentially, choose standard normal distribution two growth rates, broad normal \\(n_s\\) constraint beginning resistant population born yet, maximum error committing 10%, flat normal distribution centered beginning process \\(t_r\\).","code":""},{"path":"https://caravagnalab.github.io/biPOD/articles/biPOD.html","id":"installation-of-the-package","dir":"Articles","previous_headings":"","what":"Installation of the package","title":"Get started","text":"can install biPOD GitHub using devtools. Load package.","code":"devtools::install_github(\"caravagnalab/biPOD\") library(biPOD)"},{"path":"https://caravagnalab.github.io/biPOD/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Giovanni Santacatterina. Author, maintainer.","code":""},{"path":"https://caravagnalab.github.io/biPOD/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Santacatterina G (2024). biPOD: biPOD. R package version 0.1, https://caravagnalab.github.io/biPOD/.","code":"@Manual{,   title = {biPOD: biPOD},   author = {Giovanni Santacatterina},   year = {2024},   note = {R package version 0.1},   url = {https://caravagnalab.github.io/biPOD/}, }"},{"path":"https://caravagnalab.github.io/biPOD/index.html","id":"bipod-","dir":"","previous_headings":"","what":"biPOD","title":"biPOD","text":"biPOD package infer kinetic parameters evolving population whose size observed discrete intervals time. tool able …","code":""},{"path":[]},{"path":[]},{"path":"https://caravagnalab.github.io/biPOD/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"biPOD","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"caravagnalab/biPOD\")"},{"path":"https://caravagnalab.github.io/biPOD/index.html","id":"copyright-and-contacts","dir":"","previous_headings":"Installation","what":"Copyright and contacts","title":"biPOD","text":"Cancer Data Science (CDS) Laboratory, University Trieste, Italy.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/biPOD-package.html","id":null,"dir":"Reference","previous_headings":"","what":"biPOD: biPOD — biPOD-package","title":"biPOD: biPOD — biPOD-package","text":"biPOD .","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/biPOD/reference/biPOD-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"biPOD: biPOD — biPOD-package","text":"Maintainer: Giovanni Santacatterina santacatterinagiovanni@gmail.com","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit growth model to bipod object — fit","title":"Fit growth model to bipod object — fit","text":"Fit growth model bipod object","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit growth model to bipod object — fit","text":"","code":"fit(   x,   growth_type = \"exponential\",   infer_t0 = TRUE,   variational = FALSE,   factor_size = 1,   model_selection_algo = \"bayes_factor\",   chains = 4,   iter = 5000,   cores = 4 )"},{"path":"https://caravagnalab.github.io/biPOD/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit growth model to bipod object — fit","text":"x bipod object growth_type character string specifying type growth assumed, one 'exponential', 'logistic', ''. '' selected model selection performed. infer_t0 Boolean, TRUE estimate instant time population born inferred variational Boolean specifying whether using variational opposed mcmc sampling factor_size numeric factor divide counts bipod object model_selection_algo Algorithm use model selection, either 'bayes_factor' 'mixture_model' chains integer number chains run Markov Chain Monte Carlo (MCMC) algorithm iter integer number iterations run MCMC algorithm cores integer number cores use parallel processing","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit growth model to bipod object — fit","text":"input bipod object added 'fit' slot containing fitted model added 'fit_info' slot containing information fit","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit_breakpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit growth model to bipod object — fit_breakpoints","title":"Fit growth model to bipod object — fit_breakpoints","text":"Fit growth model bipod object","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit_breakpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit growth model to bipod object — fit_breakpoints","text":"","code":"fit_breakpoints(   x,   norm = F,   n_trials = 5000,   min_points = 3,   available_breakpoints = c(1:5),   constrain_bp_on_x = F )"},{"path":"https://caravagnalab.github.io/biPOD/reference/fit_breakpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit growth model to bipod object — fit_breakpoints","text":"x bipod object norm . n_trials . min_points . available_breakpoints . constrain_bp_on_x .","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit_breakpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit growth model to bipod object — fit_breakpoints","text":"input bipod object added 'breakpoints_fit' slot containing fitted model breakpoints","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit_two_pop_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a two population growth — fit_two_pop_model","title":"Fit a two population growth — fit_two_pop_model","text":"Fit two population growth","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit_two_pop_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a two population growth — fit_two_pop_model","text":"","code":"fit_two_pop_model(   x,   variational = FALSE,   factor_size = 1,   chains = 4,   iter = 5000,   cores = 4 )"},{"path":"https://caravagnalab.github.io/biPOD/reference/fit_two_pop_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a two population growth — fit_two_pop_model","text":"x bipod object variational Boolean specifying whether using variational opposed mcmc sampling factor_size numeric factor divide counts bipod object chains integer number chains run Markov Chain Monte Carlo (MCMC) algorithm iter integer number iterations run MCMC algorithm cores integer number cores use parallel processing","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/fit_two_pop_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a two population growth — fit_two_pop_model","text":"input bipod object added 'two_pop_fit' slot containing fitted model added 'two_pop_fit_info' slot containing information fit","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/init.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a biPOD object. — init","title":"Creates a biPOD object. — init","text":"Creates biPOD object table containing population counts ad different time points sample name.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a biPOD object. — init","text":"","code":"init(counts, sample, break_points = NULL)"},{"path":"https://caravagnalab.github.io/biPOD/reference/init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a biPOD object. — init","text":"counts dataframe counts following fields: time time step. count population count, integer. sample string containing sample name. break_points array containing changing points.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a biPOD object. — init","text":"biPOD object class bipod.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_bayes_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the fit over the input data. — plot_bayes_factor","title":"Plot the fit over the input data. — plot_bayes_factor","text":"Plot fit input data.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_bayes_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the fit over the input data. — plot_bayes_factor","text":"","code":"plot_bayes_factor(x, with_categories = F)"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_bayes_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the fit over the input data. — plot_bayes_factor","text":"x biPOD object class bipod. Must contains 'fit' must fitted model selection. with_categories Boolean. TRUE plot bayes factor according categories proposed Jeffreys 'Theory Probability'","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_bayes_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the fit over the input data. — plot_bayes_factor","text":"plot Bayes Factor significance.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_breakpoints_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior distributions of the inferred breakpoints. — plot_breakpoints_posterior","title":"Plot the posterior distributions of the inferred breakpoints. — plot_breakpoints_posterior","text":"Plot posterior distributions inferred breakpoints.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_breakpoints_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior distributions of the inferred breakpoints. — plot_breakpoints_posterior","text":"","code":"plot_breakpoints_posterior(x, with_histogram = F, alpha = 0.6, colors = NULL)"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_breakpoints_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior distributions of the inferred breakpoints. — plot_breakpoints_posterior","text":"x bipod object 'fit' field with_histogram . alpha . colors colors use different inferred breakpoints","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_breakpoints_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior distributions of the inferred breakpoints. — plot_breakpoints_posterior","text":"ggplot object containing posterior distributions inferred breakpoints.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_elbo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the logarithm of the ELBO and the delta ELBO mean obtained during the variational sampling. — plot_elbo","title":"Plot the logarithm of the ELBO and the delta ELBO mean obtained during the variational sampling. — plot_elbo","text":"Plot logarithm ELBO delta ELBO mean obtained variational sampling.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_elbo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the logarithm of the ELBO and the delta ELBO mean obtained during the variational sampling. — plot_elbo","text":"","code":"plot_elbo(x, elbo_data, diagnose = TRUE)"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_elbo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the logarithm of the ELBO and the delta ELBO mean obtained during the variational sampling. — plot_elbo","text":"x biPOD object class bipod. Must contains 'fit' elbo_data . diagnose Boolean indicating whether plots colored contain info regarding convergence variational sampling.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_elbo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the logarithm of the ELBO and the delta ELBO mean obtained during the variational sampling. — plot_elbo","text":"ggplot object traces specified parameters","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the fit over the input data. — plot_fit","title":"Plot the fit over the input data. — plot_fit","text":"Plot fit input data.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the fit over the input data. — plot_fit","text":"","code":"plot_fit(   x,   CI = 0.95,   legend_labels = NULL,   legend_title = \"group\",   zoom = TRUE,   full_process = TRUE,   sec_axis_breaks = NULL,   sec_axis_labels = NULL,   t0_posterior_color = \"darkorange\",   shadows_colors = NULL )"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the fit over the input data. — plot_fit","text":"x bipod object class bipod. Must contains 'fit' CI confidence interval growth rate plot legend_labels Vector containing name unique group x$counts$group legend_title Title legend. Default \"group\" zoom Boolean. plot present zoom focused observations full_process Boolean. plot also present posterior t0. sec_axis_breaks Vector containing values secondary x axis' breaks sec_axis_labels Vector containing labels secondary x axis t0_posterior_color color use posterior t0 shadows_colors colors use different time windows","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the fit over the input data. — plot_fit","text":"plot fit input data.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the input data of the population over time — plot_input","title":"Plot the input data of the population over time — plot_input","text":"Plot input data population time","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the input data of the population over time — plot_input","text":"","code":"plot_input(x, log_scale = F, add_highlights = F)"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the input data of the population over time — plot_input","text":"x bipod object class bipod. log_scale Boolean, indicating whether plot title add_highlights Boolean, indicating whether groups highlighted","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the input data of the population over time — plot_input","text":"plot. Represents evolution population time.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_mixture_model_omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the fit over the input data. — plot_mixture_model_omega","title":"Plot the fit over the input data. — plot_mixture_model_omega","text":"Plot fit input data.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_mixture_model_omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the fit over the input data. — plot_mixture_model_omega","text":"","code":"plot_mixture_model_omega(x, plot_type = \"hist\", color = \"maroon\")"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_mixture_model_omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the fit over the input data. — plot_mixture_model_omega","text":"x biPOD object class bipod. Must contains 'fit' must fitted model selection. plot_type One \"hist\", \"violin\" \"boxplot\" color Main color figure","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_mixture_model_omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the fit over the input data. — plot_mixture_model_omega","text":"plot Bayes Factor significance.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_normalized_growth_rate_posteriors.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a plot of the posteriors for the growth rates. The posteriors are renormalized such that their highest peaks is at 1. — plot_normalized_growth_rate_posteriors","title":"Produces a plot of the posteriors for the growth rates. The posteriors are renormalized such that their highest peaks is at 1. — plot_normalized_growth_rate_posteriors","text":"Produces plot posteriors growth rates. posteriors renormalized highest peaks 1.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_normalized_growth_rate_posteriors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a plot of the posteriors for the growth rates. The posteriors are renormalized such that their highest peaks is at 1. — plot_normalized_growth_rate_posteriors","text":"","code":"plot_normalized_growth_rate_posteriors(   x,   add_prior = F,   legend_labels = NULL,   legend_title = \"group\",   colors = NULL )"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_normalized_growth_rate_posteriors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces a plot of the posteriors for the growth rates. The posteriors are renormalized such that their highest peaks is at 1. — plot_normalized_growth_rate_posteriors","text":"x bipod object 'fit' field add_prior Boolean, indicate whether plot also prior distribution legend_labels Vector containing name unique fitted parameters. Default 'rho' legend_title Title legend. Default \"group\" colors colors use different growth rates posteriors","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_normalized_growth_rate_posteriors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces a plot of the posteriors for the growth rates. The posteriors are renormalized such that their highest peaks is at 1. — plot_normalized_growth_rate_posteriors","text":"ggplot object containing posterior density plots growth rates prior density plot","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior density for a desired parameter. — plot_posterior","title":"Plot the posterior density for a desired parameter. — plot_posterior","text":"Plot posterior density desired parameter.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior density for a desired parameter. — plot_posterior","text":"","code":"plot_posterior(x, x_fit, par_name, color = \"black\")"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior density for a desired parameter. — plot_posterior","text":"x biPOD object class bipod. Must contains 'fit' must fitted model selection. x_fit fit contain desired parameter. inside x. par_name Name desired parameter. color Color density plot.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior density for a desired parameter. — plot_posterior","text":"plot Bayes Factor significance.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_posteriors.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posterior densities for a set of desired parameter. — plot_posteriors","title":"Plot posterior densities for a set of desired parameter. — plot_posteriors","text":"Plot posterior densities set desired parameter.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_posteriors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posterior densities for a set of desired parameter. — plot_posteriors","text":"","code":"plot_posteriors(   x,   x_fit,   par_list,   with_histogram = F,   alpha = 0.6,   colors = NULL )"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_posteriors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posterior densities for a set of desired parameter. — plot_posteriors","text":"x biPOD object class bipod. Must contains 'fit' must fitted model selection. x_fit fit contain desired parameter. inside x. par_list Vector containing names desired parameters with_histogram Boolean. density overlay histogram samples. alpha Alpha value plotted densities. colors Vector containing colors parameter.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_posteriors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posterior densities for a set of desired parameter. — plot_posteriors","text":"plot Bayes Factor significance.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot traces of specified parameters from a fitted Stan model — plot_report","title":"Plot traces of specified parameters from a fitted Stan model — plot_report","text":"Plot traces specified parameters fitted Stan model","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot traces of specified parameters from a fitted Stan model — plot_report","text":"","code":"plot_report(   x,   fit_type = \"complex\",   breakpoints_color = \"darkgray\",   shadows_colors = NULL,   t0_posterior_color = \"darkorange\",   full_process = FALSE )"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot traces of specified parameters from a fitted Stan model — plot_report","text":"x biPOD object class bipod. Must contains least one fit fit_type . breakpoints_color . shadows_colors . t0_posterior_color . full_process .","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot traces of specified parameters from a fitted Stan model — plot_report","text":"ggplot object traces specified parameters","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_t0_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posteriors of t0 — plot_t0_posterior","title":"Plot posteriors of t0 — plot_t0_posterior","text":"Plot posteriors t0","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_t0_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posteriors of t0 — plot_t0_posterior","text":"","code":"plot_t0_posterior(x, add_prior = F)"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_t0_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posteriors of t0 — plot_t0_posterior","text":"x bipod object 'fit' field add_prior Boolean, indicate whether plot also prior distribution","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_t0_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posteriors of t0 — plot_t0_posterior","text":"ggplot object containing posterior density plots growth rates prior density plot","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_traces.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot traces of specified parameters from a fitted Stan model — plot_traces","title":"Plot traces of specified parameters from a fitted Stan model — plot_traces","text":"Plot traces specified parameters fitted Stan model","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_traces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot traces of specified parameters from a fitted Stan model — plot_traces","text":"","code":"plot_traces(x, fit, pars = c(), diagnose = FALSE)"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_traces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot traces of specified parameters from a fitted Stan model — plot_traces","text":"x biPOD object class bipod. Must contains least one fit fit name fit oh traces plotted pars character vector parameters plot. diagnose Boolean indicating whether plots colored contain info regarding convergence MCMC sampling.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_traces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot traces of specified parameters from a fitted Stan model — plot_traces","text":"ggplot object traces specified parameters","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_two_pop_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the fit over the input data. — plot_two_pop_fit","title":"Plot the fit over the input data. — plot_two_pop_fit","text":"Plot fit input data.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_two_pop_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the fit over the input data. — plot_two_pop_fit","text":"","code":"plot_two_pop_fit(x, CI = 0.95, add_posteriors = F, split_process = F)"},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_two_pop_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the fit over the input data. — plot_two_pop_fit","text":"x bipod object class bipod. Must contains 'fit' CI confidence interval growth rate plot add_posteriors Boolean. TRUE, posteriors regarding time origin resistant population time death sensitive popultation added split_process Boolean. TRUE, dynamics two populations divided.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/plot_two_pop_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the fit over the input data. — plot_two_pop_fit","text":"plot fit input data.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/print.bipod.html","id":null,"dir":"Reference","previous_headings":"","what":"Print for class 'bipod'. — print.bipod","title":"Print for class 'bipod'. — print.bipod","text":"Print class 'bipod'.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/print.bipod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print for class 'bipod'. — print.bipod","text":"","code":"# S3 method for bipod print(x, ...)"},{"path":"https://caravagnalab.github.io/biPOD/reference/print.bipod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print for class 'bipod'. — print.bipod","text":"x obj class 'bipod'. ... Default S3 method parameter.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/print.bipod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print for class 'bipod'. — print.bipod","text":"Nothing.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/sim_stochastic_exponential.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a stochastic birth-death process for multiple time steps — sim_stochastic_exponential","title":"Simulate a stochastic birth-death process for multiple time steps — sim_stochastic_exponential","text":"Simulate stochastic birth-death process multiple time steps","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/sim_stochastic_exponential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a stochastic birth-death process for multiple time steps — sim_stochastic_exponential","text":"","code":"sim_stochastic_exponential(n0, lambda, mu, steps, delta_t)"},{"path":"https://caravagnalab.github.io/biPOD/reference/sim_stochastic_exponential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a stochastic birth-death process for multiple time steps — sim_stochastic_exponential","text":"n0 initial population size. lambda rate births occur. Can single value vector length steps. mu rate deaths occur. Can single value vector length steps. steps number time steps simulate. delta_t size time step. Can single value vector length steps.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/sim_stochastic_exponential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a stochastic birth-death process for multiple time steps — sim_stochastic_exponential","text":"tibble time, population size, birth rates, death rates time step.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/sim_stochastic_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate population growth with logistic growth for multiple time steps — sim_stochastic_logistic","title":"Simulate population growth with logistic growth for multiple time steps — sim_stochastic_logistic","text":"Simulate population growth logistic growth multiple time steps","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/sim_stochastic_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate population growth with logistic growth for multiple time steps — sim_stochastic_logistic","text":"","code":"sim_stochastic_logistic(n0, lambda, mu, K, steps, delta_t)"},{"path":"https://caravagnalab.github.io/biPOD/reference/sim_stochastic_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate population growth with logistic growth for multiple time steps — sim_stochastic_logistic","text":"n0 initial population size. lambda rate births occur. Can single value vector length steps. mu rate deaths occur. Can single value vector length steps. K Carrying capacity. steps number time steps simulate. delta_t size time step. Can single value vector length steps.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/sim_stochastic_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate population growth with logistic growth for multiple time steps — sim_stochastic_logistic","text":"tibble time, population size.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/xenografts.html","id":null,"dir":"Reference","previous_headings":"","what":"Xenografts data — xenografts","title":"Xenografts data — xenografts","text":"subset data Sauer et al.","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/xenografts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Xenografts data — xenografts","text":"","code":"xenografts"},{"path":[]},{"path":"https://caravagnalab.github.io/biPOD/reference/xenografts.html","id":"xenografts","dir":"Reference","previous_headings":"","what":"xenografts","title":"Xenografts data — xenografts","text":"data frame 159 rows 4 columns: mouse Mouse id tumour_volume Tumour volume time Days, 0 denotes start treatment treatment_group Indicate mouse treated ","code":""},{"path":"https://caravagnalab.github.io/biPOD/reference/xenografts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Xenografts data — xenografts","text":".","code":""}]
